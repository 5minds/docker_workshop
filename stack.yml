version: "3.7"
services:
    dotnetcore-api:
        image: vega/dotnetcore
        volumes: 
            - posts_db:/app/db
        labels:
            - traefik.enable=true
            - traefik.http.routers.dotnetcore-api.rule=PathPrefix(`/dotnetcore`)
            - traefik.http.routers.dotnetcore-api.middlewares=dotnetcore-api
            - "traefik.http.middlewares.dotnetcore-api.stripprefix.prefixes=/dotnetcore"
            - "traefik.http.routers.dotnetcore-api.entrypoints=web"
            - traefik.http.services.dotnetcore-api.loadbalancer.server.port=5000
        deploy:
            mode: replicated
            replicas: 2
    frontend:
        image: vega/frontend
        labels:
            - traefik.enable=true
            - traefik.http.routers.frontend.rule=PathPrefix(`/frontend`)
            - traefik.http.routers.frontend.middlewares=frontend
            - "traefik.http.middlewares.frontend.stripprefix.prefixes=/frontend"
            - "traefik.http.routers.frontend.entrypoints=web"
            - traefik.http.services.frontend.loadbalancer.server.port=80
        deploy:
            mode: replicated
            replicas: 2
    node-api:
        image: vega/node
        labels:
            - traefik.enable=true
            - traefik.http.routers.node.rule=PathPrefix(`/node`)
            - traefik.http.routers.node.middlewares=node
            - "traefik.http.middlewares.node.stripprefix.prefixes=/node"
            - "traefik.http.routers.node.entrypoints=web"
            - traefik.http.services.node.loadbalancer.server.port=3000
        deploy:
            mode: replicated
            replicas: 2
    python-api:
        image: vega/python
        labels:
            - traefik.enable=true
            - traefik.http.routers.python.rule=PathPrefix(`/python`)
            - traefik.http.routers.python.middlewares=python
            - "traefik.http.middlewares.python.stripprefix.prefixes=/python"
            - "traefik.http.routers.python.entrypoints=web"
            - traefik.http.services.python.loadbalancer.server.port=3001
        tty: true
        deploy:
            mode: replicated
            replicas: 2
    portainer:
        image: portainer/portainer:latest
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock 
            - portainer_data:/data
        ports:
            - "8000:8000"
            - "9000:9000"
    traefik:
        image: traefik:latest
        ports:
            - "80:80"
            - "8080:8080"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./traefik/traefik.yml:/etc/traefik/traefik.yml 

volumes:
    posts_db:
    portainer_data:
